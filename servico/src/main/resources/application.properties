quarkus.http.port=8081
quarkus.http.test-port=8181

##################################################
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = servico
quarkus.datasource.password = servico
quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5431/aps

##################################################

#%dev.quarkus.transaction-manager.default-transaction-timeout=180
#%dev.quarkus.hibernate-orm.log.sql=true
#%dev.quarkus.hibernate-orm.log.bind-param=true

##################################################
# Flyway config properties
quarkus.flyway.migrate-at-start=true

##################################################
# The default locale to use
quarkus.default-locale=pt-BR

# If you are using RESTEasy, in the context of a JAX-RS endpoint, Hibernate Validator will automatically
# resolve the optimal locale to use from the Accept-Language HTTP header, provided the supported locales
# have been properly specified:
# The list of all the supported locales
quarkus.locales=pt-BR
#quarkus.locales=pt-BR, en-US

##################################################
# Kafka configuration

# Configure the SmallRye Kafka connector
kafka.bootstrap.servers=localhost:9092

# group.id serve para identificar/fidelizar o consumer no topic
# Se o consumer ficar um periodo offline, quando voltar a ficar online vai receber as mensagens submetidas ao topic
# no periodo em que esteve offline
kafka.group.id=aps-servico

# Configure the Kafka source (we read from it)

# recebe dados de um cliente novo para manter uma replica no microservice servico
mp.messaging.incoming.clienteNovo.connector=smallrye-kafka
mp.messaging.incoming.clienteNovo.value.deserializer=br.com.jitec.aps.servico.business.consumer.jsob.ClienteDtoDeserializer

# recebe dados atualizados de um cliente para atualizar a replica no microservice servico
mp.messaging.incoming.clienteAtualizado.connector=smallrye-kafka
mp.messaging.incoming.clienteAtualizado.value.deserializer=br.com.jitec.aps.servico.business.consumer.jsob.ClienteDtoDeserializer

# envia atualizacao de saldo do cliente para o microservico de cadastro
mp.messaging.outgoing.clienteSaldoUpdate.connector=smallrye-kafka
mp.messaging.outgoing.clienteSaldoUpdate.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer

##################################################

# Authentication

quarkus.smallrye-jwt.enabled=true
mp.jwt.verify.issuer=https://securetoken.google.com/aps-quarkus-dev
mp.jwt.verify.publickey.location=https://www.googleapis.com/service_accounts/v1/jwk/securetoken@system.gserviceaccount.com

#  all paths are being protected by a policy that ensures that only authenticated users are allowed to access
quarkus.http.auth.permission.authenticated.paths=/*
quarkus.http.auth.permission.authenticated.policy=authenticated

# this subpath is allowed to public access
quarkus.http.auth.permission.public.paths=/q/*
quarkus.http.auth.permission.public.policy=permit

##################################################
